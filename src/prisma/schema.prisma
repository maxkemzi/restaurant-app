// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x", "linux-arm64-openssl-1.1.x", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DB_PRISMA_URL")
}

model Order {
  id            Int      @id @default(autoincrement())
  status        String   @default("new")
  clientId      String
  clientName    String
  clientPhone   String
  clientAddress String
  createdAt     DateTime @default(now())
  Cart          Cart?
}

model Cart {
  id           Int           @id @default(autoincrement())
  Order        Order         @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId      Int           @unique
  CartProducts CartProduct[]
  createdAt    DateTime      @default(now())
}

model Product {
  id                 Int                 @id @default(autoincrement())
  Category           Category            @relation(fields: [categoryId], references: [id])
  categoryId         Int
  name               String              @unique
  image              String
  priceUsd           Float
  weight             Float
  sizeCm             Float?
  isVegan            Boolean?
  isSpicy            Boolean?
  CartProducts       CartProduct[]
  ProductIngredients ProductIngredient[]
  createdAt          DateTime            @default(now())
}

model CartProduct {
  id        Int      @id @default(autoincrement())
  Cart      Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId    Int
  Product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  createdAt DateTime @default(now())
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  Products  Product[]
  createdAt DateTime  @default(now())
}

model Ingredient {
  id                 Int                 @id @default(autoincrement())
  name               String              @unique
  ProductIngredients ProductIngredient[]
  createdAt          DateTime            @default(now())
}

model ProductIngredient {
  id           Int        @id @default(autoincrement())
  Ingredient   Ingredient @relation(fields: [ingredientId], references: [id], onDelete: Cascade)
  ingredientId Int
  Product      Product    @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId    Int
  createdAt    DateTime   @default(now())

  @@unique([ingredientId, productId])
}
