name: Vercel Production Deployment
on:
  push:
    branches:
      - main
jobs:
  pipeline:
    runs-on: ubuntu-latest
    env:
      DB_PRISMA_URL: postgresql://postgres:123456@postgres:5432/restaurant?schema=public
    container: node:latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123456
          POSTGRES_DB: restaurant
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: npm install
      - name: Setup database
        run: npx prisma generate && npx prisma migrate deploy
      - name: Run tests
        run: npm test -- --reporter=html --outputFile=./reports/tests/index.html
      - name: Run E2E tests
        run: npm run test:e2e:headless
      - name: Check code style
        run: npm run lint -- -f node_modules/eslint-html-reporter/reporter.js -o ./reports/lint/index.html
      - name: Upload lint and test results
        uses: actions/upload-artifact@v3
        with:
          name: ci-results
          path: ./reports/
  deploy:
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    needs: pipeline
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install vercel CLI
        run: npm install --global vercel@latest
      - name: Pull vercel environment information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build project artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy project artifacts to vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}